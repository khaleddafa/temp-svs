version: "3.7"

services:
    web1:
        build:
            context: .
            dockerfile: Docker/PHP/74-fpm/Dockerfile
        restart: always
        expose:
            - "9000"
        container_name: web1
        extra_hosts:
            - "host.docker.internal:host-gateway"
        volumes:
            - ./:/var/www/html
        environment:
            APP_ENV: dev
        networks:
            - local-network
        depends_on:
            - db  # Ensure db starts before web1

    db:
        image: percona
        restart: always
        environment:
            MYSQL_DATABASE: svs
            MYSQL_USER: khaled
            MYSQL_PASSWORD: root
            MYSQL_ROOT_PASSWORD: root
        volumes:
            - ./cpocket_v-2_1.sql:/docker-entrypoint-initdb.d/cpocket_v-2_1.sql
        networks:
            - local-network
        healthcheck:
            test: [ "CMD", "mysqladmin", "ping", "--silent" ]
            interval: 10s
            retries: 5

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: local-phpmyadmin
        restart: always
        ports:
            - "8003:80"
        environment:
            PMA_HOST: db
            PMA_PORT: 3306
        networks:
            - local-network

    nginx-server:
        build:
            context: .
            dockerfile: Docker/nginx/Dockerfile
        container_name: nginx_server
        restart: unless-stopped
        ports:
            - "80:80"
            - "81:81"
        volumes:
            - ./:/var/www/html
        depends_on:
            - web1
        networks:
            - local-network
    redis:
        image: redis
        restart: always
        networks:
            - local-network

    composer-engine:
        image: composer:latest
        restart: 'no'
        command: install --working-dir=/var/www/html --optimize-autoloader --prefer-dist
        volumes:
            - ./:/var/www/html
        networks:
            - local-network

networks:
    local-network:
        driver: bridge
